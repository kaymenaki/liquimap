// Emfatic - https://www.eclipse.org/emfatic/
package liquimap;

// Blueprint-related part of the language

class Blueprint{
	attr String name;
	val Stage[*] stages;
	val Department[*] departments;
}

class Stage {
	attr String name;
	attr String colour;
	// val because deleting a stage should also delete
	// all the steps it contains
	val Step[*] steps;
}

class Step {
	attr String name;
	val Touchpoint[*] touchpoints;
}

class Touchpoint {
	id attr String ~id;
	attr String name;
	ref Department[*] departments;
}

class Department {
	id attr String ~id;
	attr String name;
}

// Experience map-related part of the language

class ExperienceMap {
	attr String name;
	val ExperienceMapNode[*] nodes;
	val Transition[*] transitions;
}

abstract class ExperienceMapNode {
	id attr String ~id;
	attr String name;
	ref Transition[*]#from outgoing;
	ref Transition[*]#to incoming;
}

class Action extends ExperienceMapNode {
	ref Touchpoint touchpoint;
}

class Decision extends ExperienceMapNode {
	
}

class Transition {
	attr String name;
	ref ExperienceMapNode#outgoing from;
	ref ExperienceMapNode#incoming to;
}
