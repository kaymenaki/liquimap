pre {
	var blueprint = Blueprint.all.first();
}

rule Blueprint2HTML 
	transform b : Blueprint {

	template : "blueprint2html.egl"

	parameters : Map {
		"path" = Sequence{b.name},
		"format" = "html",
		"stages" = Stage.all,
		"steps" = Step.all,
		"touchpoints" = Touchpoint.all,
		"participants" = Participant.all,
		"layers" = Sequence {
			Map{
				"title" = "Participants",
				"id" = "participants"
			}
		}
	}
	
}

rule Blueprint2Sankey 
	transform b : Blueprint {

	template : "blueprint2sankey.egl"

	parameters : Map {
		"path" = Sequence{b.name, "Sankey"},
		"format" = "html"
	}
	
}

rule Participant2HTML
	transform p : Participant {
	
	template : "blueprint2html.egl"
	
	parameters : Map {
		"path" = Sequence{blueprint.name, "Participants", p.name},
		"format" = "html",
		"stages" = p.getStages(),
		"steps" = p.getSteps(),
		"touchpoints" = p.getTouchpoints(),
		"participants" = Sequence{p},
		"b" = blueprint
	}
	
}

rule Stage2HTML
	transform stage : Stage {
	
	template : "blueprint2html.egl"
	
	parameters : Map {
		"path" = Sequence{stage.eContainer().name, "Stages", stage.name},
		"format" = "html",
		"stages" = Sequence{},
		"steps" = stage.steps,
		"touchpoints" = stage.steps.touchpoints.flatten(),
		"participants" = stage.getParticipants(),
		"b" = blueprint
	}
	
}

rule UserFlow2Dot 
	transform userFlow : UserFlow {

	template : "userflow2dot.egl"

	parameters : Map {
		"path" = Sequence{userFlow.eContainer.name, "User Flow"},
		"format" = "graphviz-dot",
		"stage" = null
	}
	
}

rule StageUserFlow2Dot 
	transform stage : Stage {

	template : "userflow2dot.egl"

	parameters : Map {
		"path" = Sequence{blueprint.name, "User Flow", "Stages", stage.name},
		"format" = "graphviz-dot",
		"userFlow" = blueprint.userflow,
		"layers" = Sequence {
			Map {
				"id" = "adjacent",
				"title" = "Adjacent nodes",
				"active" = false
			}
		}
	}
	
}

rule UserJourney2HTML
	transform journey : UserJourney {
	
	template : "userjourney2html.egl"
	
	parameters : Map {
		"path" = Sequence{journey.eContainer().eContainer().name, "User Flow", "Journeys", journey.name},
		"format" = "html"
	}
	
}

operation Participant getStages() {
	return Stage.all.select(stage|stage.steps.exists(step|self.getSteps().includes(step)));
}

operation Participant getSteps() {
	return Step.all.select(step|step.touchpoints.
		exists(touchpoint|self.getTouchpoints().includes(touchpoint)));
}

operation Participant getTouchpoints() {
	return Touchpoint.all.select(touchpoint|touchpoint.participants.includes(self));
}

operation Stage getParticipants() {
	
	return Participant.all.select(p|
		self.steps.touchpoints.flatten().participants.flatten().includes(p));
}
